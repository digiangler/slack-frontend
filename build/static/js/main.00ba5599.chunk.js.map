{"version":3,"sources":["StateProvider.js","firebase.js","ChatInput.js","Message.js","Chat.js","Header.js","reducer.js","Login.js","SidebarOption.js","Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","ChatInput","channelName","channelId","useState","input","setInput","user","className","onChange","e","target","placeholder","toLowerCase","type","onClick","preventDefault","collection","doc","add","message","timestamp","FieldValue","serverTimestamp","displayName","userImage","photoURL","Message","src","alt","Date","toDate","toUTCString","Chat","roomId","useParams","roomDetails","setRoomDetails","roomMessages","setRoomMessages","useEffect","onSnapshot","snapshot","data","orderBy","docs","map","name","StarBorderOutlined","InfoOutlined","Header","Avatar","actionTypes","state","action","console","log","Login","dispatch","Button","signInWithPopup","then","result","catch","error","alert","SidebarOption","Icon","id","addChannelOption","title","history","useHistory","prompt","push","Sidebar","channels","setChannels","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","channel","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00ba5599.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCzoxARW5b9mNyfqpjtwTGxogazTz3u3TI\",\n  authDomain: \"slack-clone-front-end.firebaseapp.com\",\n  databaseURL: \"https://slack-clone-front-end.firebaseio.com\",\n  projectId: \"slack-clone-front-end\",\n  storageBucket: \"slack-clone-front-end.appspot.com\",\n  messagingSenderId: \"1051497611471\",\n  appId: \"1:1051497611471:web:ebecb83fde5091fe2137ba\",\n  measurementId: \"G-545049JVPN\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import { Button } from \"@material-ui/core\";\n\nimport React, { useState } from \"react\";\n\nimport firebase from \"firebase\";\n\nimport \"./ChatInput.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport db from \"./firebase\";\n\nfunction ChatInput({ channelName, channelId }) {\n  const [input, setInput] = useState(\"\");\n  const [{ user }] = useStateValue();\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    if (channelId) {\n      db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\n        message: input,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        user: user.displayName,\n        userImage: user.photoURL,\n      });\n    }\n    setInput(\"\");\n  };\n  return (\n    <div className=\"chatInput\">\n      <form>\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder={`Message #${channelName?.toLowerCase()}`}\n        />\n        <button type=\"sumbit\" onClick={sendMessage}>\n          SEND\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatInput;\n","import React from \"react\";\n\nimport \"./Message.css\";\n\nfunction Message({ message, timestamp, user, userImage }) {\n  return (\n    <div className=\"message\">\n      <img src={userImage} alt=\"\" />\n      <div className=\"message__info\">\n        <h4>\n          {user}{\" \"}\n          <span className=\"message__timestamp\">\n            {new Date(timestamp?.toDate()).toUTCString()}\n          </span>\n        </h4>\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Message;\n","import { InfoOutlined, StarBorderOutlined } from \"@material-ui/icons\";\n\nimport React, { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport \"./Chat.css\";\nimport ChatInput from \"./ChatInput\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\n\nconst Chat = () => {\n  const { roomId } = useParams();\n  const [roomDetails, setRoomDetails] = useState(null);\n  const [roomMessages, setRoomMessages] = useState([]);\n\n  useEffect(() => {\n    if (roomId) {\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .onSnapshot((snapshot) => setRoomDetails(snapshot.data()));\n    }\n\n    db.collection(\"rooms\")\n      .doc(roomId)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) =>\n        setRoomMessages(snapshot.docs.map((doc) => doc.data()))\n      );\n  }, [roomId]);\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <div className=\"chat__headerLeft\">\n          <h4 className=\"chat__channelName\">\n            <strong> #{roomDetails?.name} </strong>\n            {/* <strong>#general</strong> */}\n            <StarBorderOutlined />\n          </h4>\n        </div>\n\n        <div className=\"chat__headerRight\">\n          <p>\n            <InfoOutlined /> Details\n          </p>\n        </div>\n      </div>\n\n      <div className=\"chat__messages\">\n        {roomMessages.map(({ message, timestamp, user, userImage }) => (\n          <Message\n            message={message}\n            timestamp={timestamp}\n            user={user}\n            userImage={userImage}\n          />\n        ))}\n      </div>\n      <ChatInput channelName={roomDetails?.name} channelId={roomId} />\n    </div>\n  );\n};\n\nexport default Chat;\n","import { Avatar } from \"@material-ui/core\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n\nimport React from \"react\";\n\nimport \"./Header.css\";\nimport { useStateValue } from \"./StateProvider\";\n\nconst Header = () => {\n  const [{ user }] = useStateValue();\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <Avatar\n          className=\"header__avatar\"\n          src={user?.photoURL}\n          alt={user?.displayName}\n        />\n        <AccessTimeIcon />\n      </div>\n\n      <div className=\"header__search\">\n        <SearchIcon />\n        <input placeholder=\"Search me\" />\n      </div>\n\n      <div className=\"header__right\">\n        <HelpOutlineIcon />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","export const initialState = {\n  user: null,\n};\n\nexport const actionTypes = {\n  SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { Button } from \"@material-ui/core\";\n\nimport React from \"react\";\n\nimport \"./Login.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport { auth, provider } from \"./firebase\";\nimport { actionTypes } from \"./reducer\";\n\nconst Login = () => {\n  const [state, dispatch] = useStateValue();\n\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        dispatch({\n          type: actionTypes.SET_USER,\n          user: result.user,\n        });\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <img\n          src=\"https://a.slack-edge.com/80588/marketing/img/icons/icon_slack_hash_colored.png\"\n          alt=\"\"\n        />\n\n        <h1>Sign in to Clever Programmer</h1>\n        <p>digi-angler.slack.com</p>\n        <Button onClick={signIn}>Sign in with Google</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./SidebarOption.css\";\nimport db from \"./firebase\";\n\nconst SidebarOption = ({ Icon, id, addChannelOption, title }) => {\n  const history = useHistory();\n\n  const selectChannel = () => {\n    if (id) {\n      history.push(`/room/${id}`);\n    } else {\n      history.push(title);\n    }\n  };\n\n  const addChannel = () => {\n    const channelName = prompt(\"Please enter the channel name\");\n\n    if (channelName) {\n      db.collection(\"rooms\").add({\n        name: channelName,\n      });\n    }\n  };\n  return (\n    <div\n      className=\"sidebarOption\"\n      onClick={addChannelOption ? addChannel : selectChannel}\n    >\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\n      {Icon ? (\n        <h3>{title}</h3>\n      ) : (\n        <h3 className=\"sidebarOption__channel\">\n          <span className=\"sidebarOption__hash\"> # </span> {title}\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default SidebarOption;\n","import FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport \"./Sidebar.css\";\nimport SidebarOption from \"./SidebarOption\";\nimport db from \"./firebase\";\n\nconst Sidebar = () => {\n  const [channels, setChannels] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"rooms\").onSnapshot((snapshot) => {\n      setChannels(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          name: doc.data().name,\n        }))\n      );\n    });\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <div className=\"sidebar__info\">\n          <h2>Digi-Angler</h2>\n          <h3>\n            <FiberManualRecordIcon />\n            Rafeh Qazi\n          </h3>\n        </div>\n        <CreateIcon />\n      </div>\n      <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n      <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\n      <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\n      <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\n      <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\" />\n      <SidebarOption Icon={AppsIcon} title=\"Apps\" />\n      <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\n      <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\n      <SidebarOption title=\"YouTube\" />\n      <hr />\n      <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\n      <hr />\n      <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\n\n      {channels.map((channel) => (\n        <SidebarOption title={channel.name} id={channel.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Chat from \"./Chat\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport Sidebar from \"./Sidebar\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  console.log(user);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n            <Header />\n            <div className=\"app__body\">\n              <Sidebar />\n              <Switch>\n                <Route path=\"/room/:roomId\">\n                  <Chat />\n                </Route>\n                <Route path=\"/\">\n                  <h1>Welcome</h1>\n                </Route>\n              </Switch>\n            </div>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { StateProvider } from \"./StateProvider\";\nimport \"./index.css\";\nimport reducer, { initialState } from \"./reducer\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}